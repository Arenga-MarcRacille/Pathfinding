// <auto-generated />
using System.Text.Json;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pathfinding.Data;

#nullable disable

namespace Pathfinding.Migrations
{
    [DbContext(typeof(PathfindingContext))]
    partial class PathfindingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pathfinding.Models.MapData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("Edges")
                        .HasColumnType("jsonb");

                    b.Property<int>("MapsId")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("Nodes")
                        .HasColumnType("jsonb");

                    b.HasKey("Id");

                    b.HasIndex("MapsId");

                    b.ToTable("MapData");
                });

            modelBuilder.Entity("Pathfinding.Models.Maps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("Pathfinding.Models.MapData", b =>
                {
                    b.HasOne("Pathfinding.Models.Maps", "Maps")
                        .WithMany()
                        .HasForeignKey("MapsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Maps");
                });
#pragma warning restore 612, 618
        }
    }
}
